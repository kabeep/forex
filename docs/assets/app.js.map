{"version":3,"sources":["../page/components/icon.js","../page/components/input.js","../src/constants/index.ts","../src/utils/http-request.ts","../src/utils/http-client.ts","../src/utils/index.ts","../src/services/forex-client.ts","../src/services/index.ts","../src/services/types.ts","../src/utils/types.ts","../src/types.ts","../src/index.ts","../page/utils/get-locale.js","../page/utils/format-date.js","../page/utils/get-currencies.js","../page/components/select.js","../page/utils/debounce.js","../page/utils/get-rates.js","../page/app.js"],"names":["_BaseIcon","BaseIcon","GithubIcon","NpmIcon","SwitchIcon","init_icon","__esmMin","href","classname","shadowRoot","anchor","slot","viewBox","children","svg","child","_a","_b","tag","restOptions","__objRest","key","__publicField","_NumberInput","NumberInput","init_input","container","label","errorMessage","input","isValid","event","value","trigger","BASE_URL","BASE_URL_VERSION","LOCALE_CURRENCY","NON_STANDARD_CODES","init_constants","_HttpRequest","HttpRequest","http_request_default","init_http_request","options","__async","_c","_d","timeoutId","requestHeader","__spreadValues","controller","response","contentType","data","error","code","message","HttpClient","http_client_default","init_http_client","_0","url","requestOptions","__spreadProps","init_utils","_ForexClient","ForexClient","forex_client_default","init_forex_client","baseCurrency","minified","date","lowercaseCode","baseCode","destCode","rates","lowercaseDestCode","localeCode","amount","record","type","source","dateString","prefix","sourceExtension","length","padding","init_services","init_types","init_src","getLocale","get_locale_default","init_get_locale","formatDate","paddedDate","format_date_default","init_format_date","getCurrencies","localData","time","result","item","a","b","letterA","letterB","get_currencies_default","init_get_currencies","_FieldSelect","FieldSelect","init_select","option","defaultValue","client","currencyCode","select","e","customEvent","debounce","function_","wait","leading","timer","lastThis","lastArguments","invokeFunction","debounced","arguments_","debounce_default","init_debounce","getRates","get_rates_default","init_get_rates","require_app","__commonJSMin","exports","store","baseCurrencyEl","destCurrencyEl","baseAmountEl","destAmountEl","switchButtonEl","onBaseAmountChange","onDestAmountChange","onRateChange","rate","onCurrenciesChange"],"mappings":"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,EAAI,CAAA,KAAA,CACJ,EAAI,CAAA,KAAA,CACJ,GAAI,KACJ,CAAA,EAAA,CAAI,KACJ,CAAA,EAAA,CAAI,KACJ,CAAA,EAAA,CAAI,MACJ,EAAI,CAAA,KAAA,CACJ,EAAI,CAAA,KAAA,CACJ,EAAI,CAAA,KAAA,CACJ,GAAI,KACJ,CAAA,EAAA,CAAI,KACJ,CAAA,EAAA,CAAI,KACJ,CAAA,EAAA,CAAI,MACJ,EAAI,CAAA,KAAA,CACJ,GAAI,KACJ,CAAA,EAAA,CAAI,MACJ,EAAI,CAAA,KAAA,CACJ,EAAI,CAAA,KAAA,CACJ,EAAI,CAAA,KAAA,CACJ,GAAI,KACJ,CAAA,EAAA,CAAI,KACJ,CAAA,EAAA,CAAI,KACJ,CAAA,EAAA,CAAI,MACJ,EAAI,CAAA,KAAA,CACJ,EAAI,CAAA,KAAA,CACJ,EAAI,CAAA,KAAA,CACJ,GAAI,KACJ,CAAA,EAAA,CAAI,KACJ,CAAA,EAAA,CAAI,KACJ,CAAA,EAAA,CAAI,MACJ,EAAI,CAAA,KAAA,CACJ,EAAI,CAAA,KAAA,CACJ,EAAI,CAAA,KAAA,CACJ,GAAI,KACJ,CAAA,EAAA,CAAI,KACJ,CAAA,EAAA,CAAI,KACJ,CAAA,EAAA,CAAI,MACJ,EAAI,CAAA,KAAA,CACJ,EAAI,CAAA,KAAA,CACJ,EAAI,CAAA,KAAA,CACJ,GAAI,KACJ,CAAA,EAAA,CAAI,MACJ,EAAI,CAAA,KAAA,CACJ,GAAI,KACJ,CAAA,EAAA,CAAI,KACJ,CAAA,EAAA,CAAI,KACJ,CAAA,EAAA,CAAI,MACJ,EAAI,CAAA,KAAA,CACJ,EAAI,CAAA,KAAA,CACJ,EAAI,CAAA,KAAA,CACJ,GAAI,KACJ,CAAA,EAAA,CAAI,KACJ,CAAA,EAAA,CAAI,KACJ,CAAA,EAAA,CAAI,MACJ,EAAI,CAAA,KAAA,CACJ,EAAI,CAAA,KAAA,CACJ,EAAI,CAAA,KAAA,CACJ,GAAI,KACJ,CAAA,EAAA,CAAI,KACJ,CAAA,EAAA,CAAI,KACJ,CAAA,EAAA,CAAI,MACJ,EAAI,CAAA,KAAA,CACJ,EAAI,CAAA,KAAA,CACJ,EAAI,CAAA,KAAA,CACJ,GAAI,KACJ,CAAA,EAAA,CAAI,KACJ,CAAA,EAAA,CAAI,KACJ,CAAA,EAAA,CAAI,MACJ,EAAI,CAAA,KAAA,CACJ,GAAI,KACJ,CAAA,EAAA,CAAI,MACJ,EAAI,CAAA,KAAA,CACJ,EAAI,CAAA,KAAA,CACJ,EAAI,CAAA,KAAA,CACJ,GAAI,KACJ,CAAA,EAAA,CAAI,KACJ,CAAA,EAAA,CAAI,KACJ,CAAA,EAAA,CAAI,MACJ,EAAI,CAAA,KAAA,CACJ,EAAI,CAAA,KAAA,CACJ,EAAI,CAAA,KAAA,CACJ,GAAI,KACJ,CAAA,EAAA,CAAI,MACJ,EAAI,CAAA,KAAA,CACJ,GAAI,KACJ,CAAA,EAAA,CAAI,KACJ,CAAA,EAAA,CAAI,KACJ,CAAA,EAAA,CAAI,MACJ,EAAI,CAAA,KAAA,CACJ,EAAI,CAAA,KAAA,CACJ,EAAI,CAAA,KAAA,CACJ,GAAI,KACJ,CAAA,EAAA,CAAI,KACJ,CAAA,EAAA,CAAI,KACJ,CAAA,EAAA,CAAI,MACJ,EAAI,CAAA,KAAA,CACJ,GAAI,KACJ,CAAA,EAAA,CAAI,MACJ,EAAI,CAAA,KAAA,CACJ,EAAI,CAAA,KAAA,CACJ,EAAI,CAAA,KAAA,CACJ,GAAI,KACJ,CAAA,EAAA,CAAI,KACJ,CAAA,EAAA,CAAI,KACJ,CAAA,EAAA,CAAI,MACJ,EAAI,CAAA,KAAA,CACJ,EAAI,CAAA,KAAA,CACJ,EAAI,CAAA,KAAA,CACJ,GAAI,KACJ,CAAA,EAAA,CAAI,KACJ,CAAA,EAAA,CAAI,KACJ,CAAA,EAAA,CAAI,MACJ,EAAI,CAAA,KAAA,CACJ,EAAI,CAAA,KAAA,CACJ,EAAI,CAAA,KAAA,CACJ,GAAI,KACJ,CAAA,EAAA,CAAI,KACJ,CAAA,EAAA,CAAI,KACJ,CAAA,EAAA,CAAI,MACJ,EAAI,CAAA,KAAA,CACJ,EAAI,CAAA,KAAA,CACJ,EAAI,CAAA,KAAA,CACJ,GAAI,KACJ,CAAA,EAAA,CAAI,MACJ,EAAI,CAAA,KAAA,CACJ,GAAI,KACJ,CAAA,EAAA,CAAI,KACJ,CAAA,EAAA,CAAI,KACJ,CAAA,EAAA,CAAI,MACJ,EAAI,CAAA,KAAA,CACJ,EAAI,CAAA,KAAA,CACJ,EAAI,CAAA,KAAA,CACJ,GAAI,KACJ,CAAA,EAAA,CAAI,KACJ,CAAA,EAAA,CAAI,KACJ,CAAA,EAAA,CAAI,MACJ,EAAI,CAAA,KAAA,CACJ,EAAI,CAAA,KAAA,CACJ,EAAI,CAAA,KAAA,CACJ,GAAI,KACJ,CAAA,EAAA,CAAI,KACJ,CAAA,EAAA,CAAI,KACJ,CAAA,EAAA,CAAI,MACJ,EAAI,CAAA,KAAA,CACJ,EAAI,CAAA,KAAA,CACJ,EAAI,CAAA,KAAA,CACJ,GAAI,KACJ,CAAA,EAAA,CAAI,KACJ,CAAA,EAAA,CAAI,KACJ,CAAA,EAAA,CAAI,MACJ,EAAI,CAAA,KAAA,CACJ,GAAI,KACJ,CAAA,EAAA,CAAI,MACJ,EAAI,CAAA,KAAA,CACJ,EAAI,CAAA,KAAA,CACJ,EAAI,CAAA,KAAA,CACJ,GAAI,KACJ,CAAA,EAAA,CAAI,KACJ,CAAA,EAAA,CAAI,KACJ,CAAA,EAAA,CAAI,MACJ,EAAI,CAAA,KAAA,CACJ,EAAI,CAAA,KAAA,CACJ,EAAI,CAAA,KAAA,CACJ,GAAI,KACJ,CAAA,EAAA,CAAI,KACJ,CAAA,EAAA,CAAI,KACJ,CAAA,EAAA,CAAI,MACJ,EAAI,CAAA,KAAA,CACJ,EAAI,CAAA,KAAA,CACJ,EAAI,CAAA,KAAA,CACJ,GAAI,KACJ,CAAA,EAAA,CAAI,KACJ,CAAA,EAAA,CAAI,KACJ,CAAA,EAAA,CAAI,MACJ,EAAI,CAAA,KAAA,CACJ,EAAI,CAAA,KAAA,CACJ,EAAI,CAAA,KAAA,CACJ,GAAI,KACJ,CAAA,EAAA,CAAI,MACJ,EAAI,CAAA,KAAA,CACJ,GAAI,KACJ,CAAA,EAAA,CAAI,KACJ,CAAA,EAAA,CAAI,KACJ,CAAA,EAAA,CAAI,MACJ,EAAI,CAAA,KAAA,CACJ,EAAI,CAAA,KAAA,CACJ,EAAI,CAAA,KAAA,CACJ,GAAI,KACJ,CAAA,EAAA,CAAI,KACJ,CAAA,EAAA,CAAI,KACJ,CAAA,EAAA,CAAI,MACJ,EAAI,CAAA,KAAA,CACJ,GAAI,KACJ,CAAA,EAAA,CAAI,MACJ,EAAI,CAAA,KAAA,CACJ,EAAI,CAAA,KAAA,CACJ,EAAI,CAAA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","file":"app.js","sourcesContent":["class BaseIcon extends HTMLElement {\r\n    static styles = new CSSStyleSheet();\r\n    static {\r\n        BaseIcon.styles.replaceSync(`\r\n            :host {\r\n                display: inline-flex;\r\n                font-size: var(--navbar-icon-font-size, 1rem);\r\n                color: var(--anchor-link-color, currentColor);\r\n                text-decoration: none;\r\n                outline: none;\r\n                cursor: pointer;\r\n            }\r\n            :host(:hover) {\r\n                color: var(--anchor-link-hover-color, currentColor);\r\n            }\r\n            a {\r\n                display: inline-flex;\r\n                align-items: center;\r\n                flex-direction: row;\r\n                color: inherit;\r\n                text-decoration: none;\r\n                outline: none;\r\n                transition: var(--transition-duration) var(--transition-bezier);\r\n            }\r\n            .icon { font-size: var(--navbar-icon-font-size); }\r\n            .icon.icon-npm:hover { color: #cd3f45; }\r\n            .icon.icon-github:hover { color: #000; }\r\n            .icon.icon-switch { font-size: 2rem; }\r\n            .icon.icon-switch:hover { color: #6600eb; }\r\n            .user-selected-none {\r\n                user-select: none;\r\n                -ms-user-select: none;\r\n                -moz-user-select: none;\r\n                -webkit-user-select: none;\r\n            }\r\n        `);\r\n    }\r\n\r\n    constructor({ href, classname } = {}) {\r\n        super();\r\n        const shadowRoot = this.attachShadow({ mode: 'open' });\r\n        shadowRoot.adoptedStyleSheets = [BaseIcon.styles];\r\n\r\n        const anchor = this.createAnchorElement(href, classname);\r\n\r\n        const slot = this.createSlotElement();\r\n        anchor.appendChild(slot);\r\n\r\n        shadowRoot.appendChild(anchor);\r\n    }\r\n\r\n    createAnchorElement(href, classname) {\r\n        const anchor = document.createElement('a');\r\n        anchor.setAttribute(\r\n            'class',\r\n            ['icon', ...(classname || this.classList)].join(' '),\r\n        );\r\n        anchor.setAttribute('href', href || this.getAttribute('href') || '#');\r\n        return anchor;\r\n    }\r\n\r\n    createSlotElement() {\r\n        return document.createElement('slot');\r\n    }\r\n\r\n    createSvgElement({ viewBox, children = [] }) {\r\n        const svg = document.createElementNS(\r\n            'http://www.w3.org/2000/svg',\r\n            'svg',\r\n        );\r\n        svg.setAttribute('viewBox', viewBox);\r\n        svg.setAttribute('width', '1em');\r\n        svg.setAttribute('height', '1em');\r\n\r\n        for (const child of children) {\r\n            svg.appendChild(this.createSvgChildElement(child));\r\n        }\r\n\r\n        return svg;\r\n    }\r\n\r\n    createSvgChildElement({ tag, ...restOptions }) {\r\n        const child = document.createElementNS(\r\n            'http://www.w3.org/2000/svg',\r\n            tag,\r\n        );\r\n        if (!restOptions.fill) restOptions.fill = 'currentColor';\r\n        for (const key in restOptions) {\r\n            child.setAttribute(key, restOptions[key]);\r\n        }\r\n        return child;\r\n    }\r\n}\r\n\r\nclass GithubIcon extends BaseIcon {\r\n    constructor() {\r\n        super({ classname: ['icon-github'] });\r\n        this.appendChild(this.createSvgElement({\r\n            viewBox: '0 0 24 24',\r\n            children: [\r\n                {\r\n                    tag: 'path',\r\n                    d: 'M12.5.75C6.146.75 1 5.896 1 12.25c0 5.089 3.292 9.387 7.863 10.91.575.101.79-.244.79-.546 0-.273-.014-1.178-.014-2.142-2.889.532-3.636-.704-3.866-1.35-.13-.331-.69-1.352-1.18-1.625-.402-.216-.977-.748-.014-.762.906-.014 1.553.834 1.769 1.179 1.035 1.74 2.688 1.25 3.349.948.1-.747.402-1.25.733-1.538-2.559-.287-5.232-1.279-5.232-5.678 0-1.25.445-2.285 1.178-3.09-.115-.288-.517-1.467.115-3.048 0 0 .963-.302 3.163 1.179.92-.259 1.897-.388 2.875-.388.977 0 1.955.13 2.875.388 2.2-1.495 3.162-1.179 3.162-1.179.633 1.581.23 2.76.115 3.048.733.805 1.179 1.825 1.179 3.09 0 4.413-2.688 5.39-5.247 5.678.417.36.776 1.05.776 2.128 0 1.538-.014 2.774-.014 3.162 0 .302.216.662.79.547C20.709 21.637 24 17.324 24 12.25 24 5.896 18.854.75 12.5.75Z',\r\n                },\r\n            ],\r\n        }));\r\n    }\r\n}\r\n\r\nclass NpmIcon extends BaseIcon {\r\n    constructor() {\r\n        super({ classname: ['icon-npm'] });\r\n        this.appendChild(this.createSvgElement({\r\n            viewBox: '0 0 27.23 27.23',\r\n            children: [\r\n                {\r\n                    tag: 'rect',\r\n                    width: '27.23',\r\n                    height: '27.23',\r\n                    rx: '2',\r\n                },\r\n                {\r\n                    tag: 'polygon',\r\n                    fill: '#fff',\r\n                    points: '5.8 21.75 13.66 21.75 13.67 9.98 17.59 9.98 17.58 21.76 21.51 21.76 21.52 6.06 5.82 6.04 5.8 21.75',\r\n                },\r\n            ],\r\n        }));\r\n    }\r\n}\r\n\r\nclass SwitchIcon extends BaseIcon {\r\n    constructor() {\r\n        super({ classname: ['icon-switch'] });\r\n        this.appendChild(this.createSvgElement({\r\n            viewBox: '0 0 1024 1024',\r\n            children: [\r\n                {\r\n                    tag: 'path',\r\n                    d: 'M677.888 335.872l-176.128 0c-2.048 0-2.048 0-2.048-2.048 0-2.048 0-2.048 0-2.048l43.008-43.008c8.192-8.192 8.192-20.48 0-28.672-8.192-8.192-20.48-8.192-28.672 0l-81.92 81.92c-6.144 6.144-8.192 14.336-4.096 22.528 4.096 8.192 10.24 12.288 18.432 12.288l233.472 0c57.344 0 106.496 47.104 108.544 102.4 2.048 53.248-36.864 100.352-90.112 108.544-10.24 2.048-18.432 10.24-18.432 20.48 0 6.144 2.048 12.288 8.192 16.384 4.096 4.096 8.192 4.096 14.336 4.096 0 0 2.048 0 2.048 0 73.728-10.24 126.976-75.776 124.928-149.504C827.392 401.408 759.808 335.872 677.888 335.872z',\r\n                },\r\n                {\r\n                    tag: 'path',\r\n                    d: 'M598.016 598.016 364.544 598.016c-57.344 0-106.496-47.104-108.544-102.4-2.048-53.248 36.864-100.352 90.112-108.544 10.24-2.048 18.432-10.24 18.432-20.48 0-6.144-2.048-12.288-8.192-16.384-4.096-4.096-10.24-6.144-16.384-4.096-73.728 10.24-126.976 75.776-124.928 149.504 2.048 79.872 69.632 143.36 149.504 143.36l176.128 0c2.048 0 2.048 0 2.048 2.048 0 2.048 0 2.048 0 2.048l-43.008 43.008c-4.096 4.096-6.144 8.192-6.144 14.336 0 6.144 2.048 10.24 6.144 14.336 4.096 4.096 10.24 6.144 14.336 6.144 6.144 0 10.24-2.048 14.336-6.144l81.92-81.92c6.144-6.144 8.192-14.336 4.096-22.528C614.4 602.112 606.208 598.016 598.016 598.016z',\r\n                },\r\n            ],\r\n        }));\r\n    }\r\n}\r\n\r\ncustomElements.define('base-icon', BaseIcon);\r\ncustomElements.define('github-icon', GithubIcon);\r\ncustomElements.define('npm-icon', NpmIcon);\r\ncustomElements.define('switch-icon', SwitchIcon);\r\n","class NumberInput extends HTMLElement {\r\n    static styles = new CSSStyleSheet();\r\n    static {\r\n        NumberInput.styles.replaceSync(`\r\n            .field-input-container {\r\n                display: flex;\r\n                flex-direction: column;\r\n                gap: 8px;\r\n                position: relative;\r\n            }\r\n\r\n            label {\r\n                font-size: 16px;\r\n                color: #333;\r\n                margin-bottom: 4px;\r\n            }\r\n\r\n            input {\r\n                box-sizing: border-box;\r\n                padding: 8.5px 14px;\r\n                font-size: 16px;\r\n                border: 2px solid var(--input-border-color);\r\n                border-radius: 6px;\r\n                width: 100%;\r\n                outline: none;\r\n                transition: var(--transition-duration) var(--transition-bezier);\r\n            }\r\n\r\n            input:hover {\r\n                border-color: var(--input-hover-border-color);\r\n            }\r\n            \r\n            input:focus {\r\n                border-color: var(--input-focus-border-color);\r\n            }\r\n\r\n            .error-message {\r\n                color: var(--input-invalid-border-color);\r\n                font-size: 12px;\r\n                visibility: hidden;\r\n                position: absolute;\r\n                top: 100%;\r\n            }\r\n\r\n            input:invalid {\r\n                border-color: var(--input-invalid-border-color);\r\n            }\r\n\r\n            input:invalid + .error-message {\r\n                visibility: visible;\r\n            }\r\n        `);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        const shadowRoot = this.attachShadow({ mode: 'open' });\r\n        shadowRoot.adoptedStyleSheets = [NumberInput.styles];\r\n\r\n        const container = this.createContainerElement();\r\n\r\n        if (this.getAttribute('label')) {\r\n            const label = this.createLabelElement();\r\n            container.appendChild(label);\r\n        }\r\n\r\n        this.input = this.createInputElement();\r\n        container.appendChild(this.input);\r\n\r\n        const errorMessage = this.createErrorMessageElement();\r\n        container.appendChild(errorMessage);\r\n\r\n        shadowRoot.appendChild(container);\r\n    }\r\n\r\n    connectedCallback() {\r\n        this.setValue('0.00');\r\n    }\r\n\r\n    createContainerElement() {\r\n        const container = document.createElement('div');\r\n        container.setAttribute('class', 'field-input-container');\r\n        return container;\r\n    }\r\n\r\n    createLabelElement() {\r\n        const label = document.createElement('label');\r\n        label.setAttribute('class', 'field-input-label');\r\n        label.setAttribute('for', 'input');\r\n        label.textContent = this.getAttribute('label') || 'Field Label';\r\n        return label;\r\n    }\r\n\r\n    createInputElement() {\r\n        const input = document.createElement('input');\r\n        input.setAttribute('class', 'field-input-inner');\r\n        input.setAttribute('type', 'text');\r\n        input.setAttribute('placeholder', this.getAttribute('placeholder') || 'Enter text');\r\n        input.addEventListener('input', () => this.handleInput());\r\n        return input\r\n    }\r\n\r\n    createErrorMessageElement() {\r\n        const errorMessage = document.createElement('div');\r\n        errorMessage.setAttribute('class', 'error-message');\r\n        errorMessage.textContent = 'Please enter Arabic numerals';\r\n        return errorMessage;\r\n    }\r\n\r\n    handleInput() {\r\n        const isValid = this.validateInput(this.input);\r\n        this.input.setCustomValidity(isValid ? '' : 'Please enter a valid input');\r\n\r\n        const event = new CustomEvent('change', {\r\n            detail: { value: this.input.value },\r\n            bubbles: true,\r\n            composed: true,\r\n        });\r\n        this.dispatchEvent(event);\r\n    }\r\n\r\n    validateInput(input) {\r\n        return !Number.isNaN(Number(input.value));\r\n    }\r\n\r\n    setValue(value, trigger = true) {\r\n        this.input.value = value;\r\n        trigger && this.handleInput(value);\r\n    }\r\n}\r\n\r\ncustomElements.define('number-input', NumberInput);\r\n","/**\n * @source {@link https://github.com/fawazahmed0/exchange-api}\n */\nexport const BASE_URL =\n    'https://cdn.jsdelivr.net/npm/@fawazahmed0/currency-api';\n\n/**\n * @source {@link https://github.com/fawazahmed0/exchange-api}\n */\nexport const BASE_URL_VERSION = 'v1';\n\n/**\n * @source {@link https://en.wikipedia.org/wiki/ISO_4217#Active_codes_(list_one)}\n */\nexport const LOCALE_CURRENCY = {\n    AD: 'EUR',\n    AE: 'AED',\n    AF: 'AFN',\n    AG: 'XCD',\n    AI: 'XCD',\n    AL: 'ALL',\n    AM: 'AMD',\n    AO: 'AOA',\n    AR: 'ARS',\n    AS: 'USD',\n    AT: 'EUR',\n    AU: 'AUD',\n    AW: 'AWG',\n    AX: 'EUR',\n    AZ: 'AZN',\n    BA: 'BAM',\n    BB: 'BBD',\n    BD: 'BDT',\n    BE: 'EUR',\n    BF: 'XOF',\n    BG: 'BGN',\n    BH: 'BHD',\n    BI: 'BIF',\n    BJ: 'XOF',\n    BL: 'EUR',\n    BM: 'BMD',\n    BN: 'BND',\n    BO: 'BOB',\n    BQ: 'USD',\n    BR: 'BRL',\n    BS: 'BSD',\n    BT: 'BTN',\n    BV: 'NOK',\n    BW: 'BWP',\n    BY: 'BYN',\n    BZ: 'BZD',\n    CA: 'CAD',\n    CC: 'AUD',\n    CD: 'CDF',\n    CF: 'XAF',\n    CG: 'XAF',\n    CH: 'CHF',\n    CI: 'XOF',\n    CK: 'NZD',\n    CL: 'CLP',\n    CM: 'XAF',\n    CN: 'CNY',\n    CO: 'COP',\n    CR: 'CRC',\n    CU: 'CUP',\n    CV: 'CVE',\n    CW: 'ANG',\n    CX: 'AUD',\n    CY: 'EUR',\n    CZ: 'CZK',\n    DE: 'EUR',\n    DJ: 'DJF',\n    DK: 'DKK',\n    DM: 'XCD',\n    DO: 'DOP',\n    DZ: 'DZD',\n    EC: 'USD',\n    EE: 'EUR',\n    EG: 'EGP',\n    EH: 'MAD',\n    ER: 'ERN',\n    ES: 'EUR',\n    ET: 'ETB',\n    FI: 'EUR',\n    FJ: 'FJD',\n    FK: 'FKP',\n    FM: 'USD',\n    FO: 'DKK',\n    FR: 'EUR',\n    GA: 'XAF',\n    GB: 'GBP',\n    GD: 'XCD',\n    GE: 'GEL',\n    GF: 'EUR',\n    GG: 'GBP',\n    GH: 'GHS',\n    GI: 'GIP',\n    GL: 'DKK',\n    GM: 'GMD',\n    GN: 'GNF',\n    GP: 'EUR',\n    GQ: 'XAF',\n    GR: 'EUR',\n    GS: 'GBP',\n    GT: 'GTQ',\n    GU: 'USD',\n    GW: 'XOF',\n    GY: 'GYD',\n    HK: 'HKD',\n    HM: 'AUD',\n    HN: 'HNL',\n    HR: 'EUR',\n    HT: 'HTG',\n    HU: 'HUF',\n    ID: 'IDR',\n    IE: 'EUR',\n    IL: 'ILS',\n    IM: 'GBP',\n    IN: 'INR',\n    IO: 'USD',\n    IQ: 'IQD',\n    IR: 'IRR',\n    IS: 'ISK',\n    IT: 'EUR',\n    JE: 'GBP',\n    JM: 'JMD',\n    JO: 'JOD',\n    JP: 'JPY',\n    KE: 'KES',\n    KG: 'KGS',\n    KH: 'KHR',\n    KI: 'AUD',\n    KM: 'KMF',\n    KN: 'XCD',\n    KP: 'KPW',\n    KR: 'KRW',\n    KW: 'KWD',\n    KY: 'KYD',\n    KZ: 'KZT',\n    LA: 'LAK',\n    LB: 'LBP',\n    LC: 'XCD',\n    LI: 'CHF',\n    LK: 'LKR',\n    LR: 'LRD',\n    LS: 'LSL',\n    LT: 'EUR',\n    LU: 'EUR',\n    LV: 'EUR',\n    LY: 'LYD',\n    MA: 'MAD',\n    MC: 'EUR',\n    MD: 'MDL',\n    ME: 'EUR',\n    MF: 'EUR',\n    MG: 'MGA',\n    MH: 'USD',\n    MK: 'MKD',\n    ML: 'XOF',\n    MM: 'MMK',\n    MN: 'MNT',\n    MO: 'MOP',\n    MP: 'USD',\n    MQ: 'EUR',\n    MR: 'MRO',\n    MS: 'XCD',\n    MT: 'EUR',\n    MU: 'MUR',\n    MV: 'MVR',\n    MW: 'MWK',\n    MX: 'MXN',\n    MY: 'MYR',\n    MZ: 'MZN',\n    NA: 'NAD',\n    NC: 'XPF',\n    NE: 'XOF',\n    NF: 'AUD',\n    NG: 'NGN',\n    NI: 'NIO',\n    NL: 'EUR',\n    NO: 'NOK',\n    NP: 'NPR',\n    NR: 'AUD',\n    NU: 'NZD',\n    NZ: 'NZD',\n    OM: 'OMR',\n    PA: 'PAB',\n    PE: 'PEN',\n    PF: 'XPF',\n    PG: 'PGK',\n    PH: 'PHP',\n    PK: 'PKR',\n    PL: 'PLN',\n    PM: 'EUR',\n    PN: 'NZD',\n    PR: 'USD',\n    PS: 'ILS',\n    PT: 'EUR',\n    PW: 'USD',\n    PY: 'PYG',\n    QA: 'QAR',\n    RE: 'EUR',\n    RO: 'RON',\n    RS: 'RSD',\n    RU: 'RUB',\n    RW: 'RWF',\n    SA: 'SAR',\n    SB: 'SBD',\n    SC: 'SCR',\n    SD: 'SDG',\n    SE: 'SEK',\n    SG: 'SGD',\n    SH: 'SHP',\n    SI: 'EUR',\n    SJ: 'NOK',\n    SK: 'EUR',\n    SL: 'SLL',\n    SM: 'EUR',\n    SN: 'XOF',\n    SO: 'SOS',\n    SR: 'SRD',\n    ST: 'STD',\n    SV: 'SVC',\n    SX: 'ANG',\n    SY: 'SYP',\n    SZ: 'SZL',\n    TC: 'USD',\n    TD: 'XAF',\n    TF: 'EUR',\n    TG: 'XOF',\n    TH: 'THB',\n    TJ: 'TJS',\n    TK: 'NZD',\n    TL: 'USD',\n    TM: 'TMT',\n    TN: 'TND',\n    TO: 'TOP',\n    TR: 'TRY',\n    TT: 'TTD',\n    TV: 'AUD',\n    TW: 'TWD',\n    TZ: 'TZS',\n    UA: 'UAH',\n    UG: 'UGX',\n    UM: 'USD',\n    US: 'USD',\n    UY: 'UYU',\n    UZ: 'UZS',\n    VA: 'EUR',\n    VC: 'XCD',\n    VE: 'VEF',\n    VG: 'USD',\n    VI: 'USD',\n    VN: 'VND',\n    VU: 'VUV',\n    WF: 'XPF',\n    WS: 'WST',\n    YE: 'YER',\n    YT: 'EUR',\n    ZA: 'ZAR',\n    ZM: 'ZMW',\n    ZW: 'ZWL',\n};\n\n/**\n * @source {@link https://en.wikipedia.org/wiki/ISO_4217#Non-standard_codes}\n */\nexport const NON_STANDARD_CODES = {\n    BDS: 'BBD',\n    CNT: 'TWD',\n    NIS: 'ILS',\n    NTD: 'TWD',\n    STG: 'GBP',\n    RMB: 'CNY',\n};\n","import type { HttpRequestOptions, HttpResponse } from './types';\n\nclass HttpRequest {\n    private static TIMEOUT = 5000;\n    private static REQUEST_HEADER: {\n        'Content-Type': 'application/json; charset=utf-8';\n    };\n\n    protected readonly timeout: number;\n    protected readonly headers: HeadersInit;\n\n    constructor(options: HttpRequestOptions = {}) {\n        this.timeout = options.timeout || HttpRequest.TIMEOUT;\n        this.headers = options.headers || HttpRequest.REQUEST_HEADER;\n    }\n\n    protected async _fetch<T = unknown>(\n        options: Request,\n    ): Promise<HttpResponse<T>> {\n        let timeoutId: string | number | NodeJS.Timeout | undefined;\n\n        const requestHeader = { ...options } as Omit<Request, 'signal'> & {\n            signal?: AbortSignal;\n        };\n        if (!requestHeader.signal) {\n            const controller = new AbortController();\n            requestHeader.signal = controller.signal;\n\n            timeoutId = setTimeout(() => controller.abort(), this.timeout);\n        }\n\n        try {\n            const response = await fetch(options.url, requestHeader);\n\n            timeoutId && clearTimeout(timeoutId);\n\n            if (!response.ok) {\n                return this.createResponse<T>(\n                    response.status ?? 500,\n                    response.statusText ?? 'Internal Server Error',\n                );\n            }\n\n            const contentType = response.headers.get('Content-Type');\n            const data = (\n                contentType?.includes('application/json')\n                    ? await response.json()\n                    : await response.text()\n            ) as T;\n\n            return this.createResponse<T>(\n                response.status ?? 200,\n                response.statusText ?? 'OK',\n                data,\n            );\n        } catch (error) {\n            if (error instanceof DOMException && error.name === 'AbortError') {\n                throw new Error('Request timeout or aborted');\n            }\n            throw error;\n        }\n    }\n\n    private createResponse<T>(\n        code: number,\n        message: string,\n        data?: T,\n    ): HttpResponse<T> {\n        return { code, message, data };\n    }\n}\n\nexport default HttpRequest;\n","import HttpRequest from './http-request';\nimport type { HttpRequestOptions, HttpResponse } from './types';\n\nclass HttpClient extends HttpRequest {\n    constructor(options: HttpRequestOptions = {}) {\n        super(options);\n    }\n\n    protected async get<T>(\n        url: string,\n        options: RequestInit = {},\n    ): Promise<HttpResponse<T>> {\n        const requestOptions = new Request(url, {\n            ...options,\n            method: 'GET',\n            headers: { ...this.headers, ...options.headers },\n        });\n\n        return this._fetch<T>(requestOptions);\n    }\n}\n\nexport default HttpClient;\n","export { default as HttpClient } from './http-client';\nexport { default as HttpRequest } from './http-request';\n","import {\n    BASE_URL,\n    BASE_URL_VERSION,\n    LOCALE_CURRENCY,\n    NON_STANDARD_CODES,\n} from '../constants';\nimport { HttpClient } from '../utils';\nimport type { HttpResponse } from '../utils/types';\nimport type {\n    AvailableCurrency,\n    ExchangeRate,\n    ForexClientOptions,\n    OriginalExchangeRates,\n} from './types';\n\n/**\n * A client to interact with the Forex API for fetching currency rates and conversion data\n */\nclass ForexClient extends HttpClient {\n    private static MINIFIED = true;\n\n    private readonly options: Pick<\n        ForexClientOptions,\n        'baseCurrency' | 'minified'\n    >;\n\n    /**\n     * Creates a new instance of ForexClient\n     * @param {ForexClientOptions} [options={}] - The options for configuring the client\n     * @param {string} options.baseCurrency - The base currency code\n     * @param {boolean} options.minified - Minified JSON format\n     * @param {number} options.timeout - Request timeout (milliseconds)\n     * @param {HeadersInit} options.headers - Request header\n     */\n    constructor(options: ForexClientOptions = {}) {\n        const {\n            baseCurrency,\n            minified = ForexClient.MINIFIED,\n            ...restOptions\n        } = options;\n        super(restOptions);\n        this.options = { baseCurrency, minified };\n    }\n\n    /**\n     * Fetches the list of available currencies\n     * @param {Date | \"latest\"} [date=\"latest\"] - The date for fetching currencies, or `\"latest\"` for the most recent\n     * @param {RequestInit} [options={}] - Additional request options\n     * @returns {Promise<HttpResponse<AvailableCurrency[]>>} A list of available currencies\n     *\n     * @example\n     * // => {\n     * //    code: 200,\n     * //    message: 'OK',\n     * //    data: [\n     * //        { code: 'eur', name: 'Euro' },\n     * //        { code: 'usd', name: 'US Dollar' },\n     * //        { code: 'cny', name: 'Chinese Yuan Renminbi' },\n     * //        ... More items\n     * //    ]\n     * // }\n     * new ForexClient().getCurrencies('latest');\n     */\n    async getCurrencies(\n        date: Date | 'latest' = 'latest',\n        options: RequestInit = {},\n    ): Promise<HttpResponse<AvailableCurrency[]>> {\n        const url = this.getApiUrl(date, 'currencies');\n        const response = await this.get<Record<string, string>>(url, options);\n        return {\n            ...response,\n            data: this.composeDataList<AvailableCurrency>(\n                response.data,\n                'name',\n            ),\n        };\n    }\n\n    /**\n     * Fetches the exchange rates for a specific currency\n     * @param {string | undefined} [code=this.options.baseCurrency] - The currency code or locale code to get rates for\n     * @param {Date | \"latest\"} [date=\"latest\"] - The date for the rates, or `'latest'` for the most recent\n     * @param {RequestInit} [options={}] - Additional request options\n     * @returns {Promise<HttpResponse<ExchangeRate[]>>} A list of exchange rates\n     *\n     * @example\n     * // => {\n     * //    code: 200,\n     * //    message: 'OK',\n     * //    data: [\n     * //        { code: 'eur', rate: 100_000 },\n     * //        { code: 'usd', rate: 100_000 },\n     * //        { code: 'cny', rate: 100_000 },\n     * //        ... More items\n     * //    ]\n     * // }\n     * new ForexClient().getRates('BTC');\n     */\n    async getRates(\n        code: string | undefined = this.options.baseCurrency,\n        date: Date | 'latest' = 'latest',\n        options: RequestInit = {},\n    ): Promise<HttpResponse<ExchangeRate[]>> {\n        const lowercaseCode = this.validCurrencyCode(code).toLowerCase();\n        const url = this.getApiUrl(date, `currencies/${lowercaseCode}`);\n        const response = await this.get<OriginalExchangeRates>(url, options);\n\n        return {\n            ...response,\n            data: this.composeDataList<ExchangeRate>(\n                response.data?.[lowercaseCode],\n                'rate',\n            ),\n        };\n    }\n\n    /**\n     * Fetches the exchange rate between two currencies\n     * @param {string | undefined} [baseCode=this.options.baseCurrency] - The base currency code or locale code\n     * @param {string} destCode - The destination currency code or locale code\n     * @param {Date | \"latest\"} [date=\"latest\"] - The date for the rate, or `'latest'` for the most recent\n     * @param {RequestInit} [options={}] - Additional request options\n     * @returns {Promise<HttpResponse<number>>} The exchange rate\n     *\n     * @example\n     * // => {\n     * //    code: 200,\n     * //    message: 'OK',\n     * //    data: 100_000\n     * // }\n     * new ForexClient().getRate('BTC', 'USD');\n     */\n    async getRate(\n        baseCode: string | undefined = this.options.baseCurrency,\n        destCode?: string,\n        date: Date | 'latest' = 'latest',\n        options: RequestInit = {},\n    ): Promise<HttpResponse<number>> {\n        const lowercaseCode = this.validCurrencyCode(baseCode).toLowerCase();\n        const url = this.getApiUrl(date, `currencies/${lowercaseCode}`);\n        const response = await this.get<OriginalExchangeRates>(url, options);\n\n        const rates = response.data?.[lowercaseCode];\n        const lowercaseDestCode = this.validCurrencyCode(\n            destCode,\n            'destination',\n        ).toLowerCase();\n        return { ...response, data: rates?.[lowercaseDestCode] };\n    }\n\n    /**\n     * Get a valid currency code based on locale\n     * @param {string} localeCode - The locale code to get currency code for\n     * @returns {string} The corresponding currency code\n     *\n     * @example\n     * // => 'USD'\n     * new ForexClient().getCode('US');\n     *\n     * @example\n     * // => 'CNH'\n     * new ForexClient().getCode('HK');\n     *\n     * @example\n     * // => 'CNY'\n     * new ForexClient().getCode('RMB');\n     */\n    getCode(localeCode: string): string {\n        return this.validCurrencyCode(localeCode, 'locale');\n    }\n\n    /**\n     * Converts an amount from one currency to another\n     * @param {string | undefined} [baseCode=this.options.baseCurrency] - The base currency code or locale code\n     * @param {string} destCode - The destination currency code or locale code\n     * @param {number} [amount=0] - The amount to convert\n     * @param {Date | \"latest\"} [date=\"latest\"] - The date for the conversion rate, or `'latest'` for the most recent\n     * @param {RequestInit} [options={}] - Additional request options\n     * @returns {Promise<HttpResponse<number>>} The converted amount\n     *\n     * @example\n     * // => {\n     * //    code: 200,\n     * //    message: 'OK',\n     * //    data: 100_000\n     * // }\n     * new ForexClient().convert('BTC', 'USD', 1);\n     *\n     * @example\n     * // => {\n     * //    code: 200,\n     * //    message: 'OK',\n     * //    data: 7.27\n     * // }\n     * new ForexClient().convert('US', 'HK', 1);\n     */\n    async convert(\n        baseCode: string | undefined = this.options.baseCurrency,\n        destCode?: string,\n        amount: number | string = 0,\n        date: Date | 'latest' = 'latest',\n        options: RequestInit = {},\n    ): Promise<HttpResponse<number>> {\n        const response = await this.getRate(baseCode, destCode, date, options);\n        const { data, ...restOptions } = response;\n        return {\n            data: data ? Number(amount) * data : undefined,\n            ...restOptions,\n        };\n    }\n\n    private composeDataList<T>(\n        record: Record<string, unknown> | undefined,\n        key: string,\n    ): T[] {\n        if (!record) return [];\n\n        return Object.entries(record).map(([code, value]) => ({\n            code,\n            [key]: value,\n        })) as T[];\n    }\n\n    private validCurrencyCode(code?: string, type = 'base'): string {\n        if (!code) throw new Error(`Please specify the ${type} currency code.`);\n\n        const additionalCodes = { ...LOCALE_CURRENCY, ...NON_STANDARD_CODES };\n\n        return (\n            additionalCodes[\n                code.toUpperCase() as keyof typeof additionalCodes\n            ] ?? code\n        );\n    }\n\n    private getApiUrl(date: Date | 'latest', source: string) {\n        const dateString = this.formatDate(date);\n        const prefix = `${BASE_URL}@${dateString}/${BASE_URL_VERSION}`;\n        const sourceExtension = this.options.minified ? 'min.json' : 'json';\n        return `${prefix}/${source}.${sourceExtension}`;\n    }\n\n    private formatDate(date: Date | 'latest'): string {\n        if (date === 'latest' || !this.isValidDate(date)) {\n            return 'latest';\n        }\n\n        return `${date.getFullYear()}-${this.paddedDate(date.getMonth() + 1)}-${this.paddedDate(date.getDate())}`;\n    }\n\n    private isValidDate(value: unknown): value is Date {\n        return this.isDate(value) && !Number.isNaN(value.getTime());\n    }\n\n    private isDate(value: unknown): value is Date {\n        return (\n            value instanceof Date ||\n            (typeof value === 'object' &&\n                Object.prototype.toString.call(value) === '[object Date]')\n        );\n    }\n\n    private paddedDate(value: number | string, length = 2, padding = '0') {\n        return `${value}`.padStart(length, padding);\n    }\n}\n\nexport default ForexClient;\n","export { default as ForexClient } from './forex-client';\n","import type { HttpRequestOptions } from '../utils/types';\n\nexport interface ForexClientOptions extends HttpRequestOptions {\n    baseCurrency?: string;\n    minified?: boolean;\n}\n\nexport interface AvailableCurrency {\n    code: string;\n    name: string;\n}\n\nexport type OriginalExchangeRates = {\n    [key: string]: Record<string, number>;\n} & { date: string };\n\nexport interface ExchangeRate {\n    code: string;\n    rate: number;\n}\n","export interface HttpRequestOptions {\n    timeout?: number;\n    headers?: HeadersInit;\n}\n\nexport interface HttpResponse<T> {\n    code: number;\n    message: string;\n    data?: T;\n}\n","export * from './services/types';\nexport * from './utils/types';\n","export * from './constants';\nexport * from './services';\nexport * from './types';\n","function getLocale () {\r\n    if (typeof window === 'undefined' || !window.navigator)\r\n        return;\r\n\r\n    return window.navigator.language?.split('-')?.[1];\r\n}\r\n\r\nexport default getLocale;\r\n","function formatDate(date) {\r\n    return `${date.getFullYear()}-${paddedDate(date.getMonth() + 1)}-${paddedDate(date.getDate())}`;\r\n}\r\n\r\nfunction paddedDate(value, length = 2, padding = '0') {\r\n    return `${value}`.padStart(length, padding);\r\n}\r\n\r\nexport default formatDate;\r\n","import { ForexClient } from '../../src';\r\nimport formatDate from './format-date';\r\n\r\nasync function getCurrencies() {\r\n    try {\r\n        const date = new Date();\r\n        const localData = localStorage.getItem('currencies');\r\n        if (localData) {\r\n            const { time, data } = JSON.parse(localData);\r\n            if (formatDate(date) === time) return data;\r\n        }\r\n\r\n        const client = new ForexClient();\r\n        const response = await client.getCurrencies();\r\n        const result = (response.data || [])\r\n            .filter((item) => Boolean(item.code))\r\n            .sort((a, b) => {\r\n                const letterA = (a.name || a.code).split(' ')[0].toLowerCase();\r\n                const letterB = (b.name || b.code).split(' ')[0].toLowerCase();\r\n                return letterA.localeCompare(letterB);\r\n            });\r\n        localStorage.setItem(\r\n            'currencies',\r\n            JSON.stringify({ time: formatDate(date), data: result }),\r\n        );\r\n\r\n        return result;\r\n    } catch (error) {\r\n        console.error('Error fetching options:', error);\r\n    }\r\n}\r\n\r\nexport default getCurrencies;\r\n","import { ForexClient } from '../../src';\r\nimport getLocale from '../utils/get-locale';\r\nimport getCurrencies from '../utils/get-currencies';\r\n\r\nclass FieldSelect extends HTMLElement {\r\n    static styles = new CSSStyleSheet();\r\n\r\n    static {\r\n        FieldSelect.styles.replaceSync(`\r\n            .field-select-container {\r\n                display: flex;\r\n                flex-direction: column;\r\n                gap: 8px;\r\n                min-width: 280px;\r\n            }\r\n\r\n            label {\r\n                font-size: 16px;\r\n                color: #333;\r\n                margin-bottom: 4px;\r\n            }\r\n\r\n            select {\r\n                box-sizing: border-box;\r\n                padding: 8.5px 14px;\r\n                font-size: 16px;\r\n                border: 2px solid var(--input-border-color);\r\n                border-radius: 6px;\r\n                width: 100%;\r\n                outline: none;\r\n            }\r\n\r\n            select:hover {\r\n                border-color: var(--input-hover-border-color);\r\n            }\r\n            \r\n            select:focus {\r\n                border-color: var(--input-focus-border-color);\r\n            }\r\n\r\n            select:invalid {\r\n                border-color: var(--input-invalid-border-color);\r\n            }\r\n        `);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        const shadowRoot = this.attachShadow({ mode: 'open' });\r\n        shadowRoot.adoptedStyleSheets = [FieldSelect.styles];\r\n\r\n        const container = this.createContainerElement();\r\n\r\n        if (this.getAttribute('label')) {\r\n            const label = this.createLabelElement();\r\n            container.appendChild(label);\r\n        }\r\n\r\n        this.select = this.createSelectElement();\r\n        container.appendChild(this.select);\r\n\r\n        shadowRoot.appendChild(container);\r\n    }\r\n\r\n    async connectedCallback() {\r\n        const data = await getCurrencies();\r\n\r\n        for (const item of data) {\r\n            if (!item.code) continue;\r\n            const option = document.createElement('option');\r\n            option.value = item.code.toUpperCase();\r\n            option.textContent = item.name || item.code.toUpperCase();\r\n            this.select.appendChild(option);\r\n        }\r\n\r\n        const defaultValue = this.getAttribute('value');\r\n        if (defaultValue) {\r\n            this.setValue(defaultValue);\r\n        } else {\r\n            const client = new ForexClient();\r\n            const localeCode = getLocale();\r\n            const currencyCode = client.getCode(localeCode);\r\n            if (currencyCode) this.setValue(currencyCode);\r\n        }\r\n    }\r\n\r\n    createContainerElement() {\r\n        const container = document.createElement('div');\r\n        container.setAttribute('class', 'field-select-container');\r\n        return container;\r\n    }\r\n\r\n    createLabelElement() {\r\n        const label = document.createElement('label');\r\n        label.setAttribute('class', 'field-select-label');\r\n        label.setAttribute('for', 'select');\r\n        label.textContent = this.getAttribute('label') || 'Select Label';\r\n        return label;\r\n    }\r\n\r\n    createSelectElement() {\r\n        const select = document.createElement('select');\r\n        select.setAttribute('class', 'field-select-inner');\r\n        select.setAttribute(\r\n            'name',\r\n            this.getAttribute('name') || 'select-field',\r\n        );\r\n\r\n        select.addEventListener('change', (e) => this.handleChange(e.target.value));\r\n        return select;\r\n    }\r\n\r\n    handleChange(value) {\r\n        const customEvent = new CustomEvent('change', {\r\n            detail: { value },\r\n            bubbles: true,\r\n            composed: true,\r\n        });\r\n        this.dispatchEvent(customEvent);\r\n    }\r\n\r\n    setValue(value) {\r\n        this.select.value = value;\r\n        this.handleChange(value);\r\n    }\r\n}\r\n\r\ncustomElements.define('field-select', FieldSelect);\r\n","function debounce(function_, wait, { leading = false } = {}) {\r\n    let result;\r\n    let timer;\r\n    let lastThis;\r\n    let lastArguments;\r\n\r\n    function invokeFunction() {\r\n        if (lastArguments !== undefined) {\r\n            result = function_.call(lastThis, ...lastArguments);\r\n            timer = lastThis = lastArguments = undefined;\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    function debounced(...arguments_) {\r\n        lastThis = this;\r\n        lastArguments = arguments_;\r\n        if (leading && timer === undefined) {\r\n            result = invokeFunction();\r\n        }\r\n\r\n        if (timer) {\r\n            clearTimeout(timer);\r\n            timer = undefined;\r\n        }\r\n\r\n        timer = setTimeout(() => {\r\n            result = invokeFunction();\r\n        }, wait);\r\n        return result;\r\n    }\r\n\r\n    debounced.cancel = () => {\r\n        if (timer !== undefined) {\r\n            clearTimeout(timer);\r\n        }\r\n\r\n        timer = lastThis = lastArguments = undefined;\r\n    };\r\n\r\n    debounced.flush = () => {\r\n        return timer === undefined ? result : invokeFunction();\r\n    };\r\n\r\n    return debounced;\r\n}\r\n\r\nexport default debounce;\r\n","import { ForexClient } from '../../src';\r\nimport formatDate from './format-date';\r\n\r\nasync function getRates(code) {\r\n    try {\r\n        const date = new Date();\r\n        const localData = localStorage.getItem(`${code}-rates`);\r\n        if (localData) {\r\n            const { time, data } = JSON.parse(localData);\r\n            if (formatDate(date) === time) return data;\r\n        }\r\n\r\n        const client = new ForexClient();\r\n        const response = await client.getRates(code);\r\n        const result = response.data?.filter((item) => Boolean(item.code));\r\n        localStorage.setItem(\r\n            `${code}-rates`,\r\n            JSON.stringify({ code, time: formatDate(date), data: result }),\r\n        );\r\n\r\n        return result;\r\n    } catch (error) {\r\n        console.error('Error fetching options:', error);\r\n    }\r\n}\r\n\r\nexport default getRates;\r\n","import './components/icon';\r\nimport './components/input';\r\nimport './components/select';\r\nimport debounce from './utils/debounce';\r\nimport getRates from './utils/get-rates';\r\n\r\n(() => {\r\n    const store = {\r\n        baseCurrency: '',\r\n        destCurrency: '',\r\n        baseAmount: 0,\r\n        destAmount: 0,\r\n        exchangeRate: 1,\r\n    };\r\n\r\n    const baseCurrencyEl = document.querySelector('#base-currency');\r\n    const destCurrencyEl = document.querySelector('#dest-currency');\r\n    const baseAmountEl = document.querySelector('#base-amount');\r\n    const destAmountEl = document.querySelector('#dest-amount');\r\n    const switchButtonEl = document.querySelector('.form-button');\r\n\r\n    const onBaseAmountChange = () => {\r\n        const value = store.baseAmount * store.exchangeRate;\r\n        store.destAmount = value;\r\n        destAmountEl.setValue(value.toFixed(2), false);\r\n    };\r\n\r\n    const onDestAmountChange = () => {\r\n        const value = store.destAmount / store.exchangeRate;\r\n        store.baseAmount = value;\r\n        baseAmountEl.setValue(value.toFixed(2), false);\r\n    };\r\n\r\n    const onRateChange = (rate = 1) => {\r\n        store.exchangeRate = rate;\r\n        onBaseAmountChange();\r\n    };\r\n\r\n    const onCurrenciesChange = debounce(async () => {\r\n        if (!store.baseCurrency || !store.destCurrency) return;\r\n\r\n        const rates = await getRates(store.baseCurrency);\r\n        onRateChange(\r\n            rates.find((item) => item.code === store.destCurrency.toLowerCase())\r\n                ?.rate,\r\n        );\r\n    }, 80);\r\n\r\n    /* region DOM Listener */\r\n    baseCurrencyEl.addEventListener('change', (event) => {\r\n        store.baseCurrency = event.detail.value;\r\n        onCurrenciesChange();\r\n    });\r\n\r\n    destCurrencyEl.addEventListener('change', (event) => {\r\n        store.destCurrency = event.detail.value;\r\n        onCurrenciesChange();\r\n    });\r\n\r\n    baseAmountEl.addEventListener('change', (event) => {\r\n        store.baseAmount = Number(event.detail.value);\r\n        onBaseAmountChange();\r\n    });\r\n\r\n    destAmountEl.addEventListener('change', (event) => {\r\n        store.destAmount = Number(event.detail.value);\r\n        onDestAmountChange();\r\n    });\r\n\r\n    switchButtonEl.addEventListener('click', () => {\r\n        [store.baseCurrency, store.destCurrency] = [\r\n            store.destCurrency,\r\n            store.baseCurrency,\r\n        ];\r\n        baseCurrencyEl.setValue(store.baseCurrency);\r\n        destCurrencyEl.setValue(store.destCurrency);\r\n    });\r\n    /* endregion */\r\n})();\r\n"]}